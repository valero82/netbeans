

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author JaimeLap
 */
public class Ejercicio2 extends javax.swing.JFrame {

    /**
     * Creates new form Ejercicio2
     */
    public Ejercicio2() {
        initComponents();
        setLocationRelativeTo(null);
        llenaComboTipo();
        jTextPorcentaje.setText(String.valueOf(jSliderPorcentaje.getValue()));
        
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupClase = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinnertiempo = new javax.swing.JSpinner();
        jSliderPorcentaje = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jRadioButtonResidente = new javax.swing.JRadioButton();
        jRadioButtonNoResidente = new javax.swing.JRadioButton();
        jCheckBoxTipo = new javax.swing.JCheckBox();
        jCheckBoxClase = new javax.swing.JCheckBox();
        jCheckBoxTiempo = new javax.swing.JCheckBox();
        jComboTipo = new javax.swing.JComboBox<>();
        jTextPorcentaje = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Tiempo acumulado");

        jLabel4.setText("Actualiza el tiempo acumulado en valor:");

        jSliderPorcentaje.setMinorTickSpacing(1);
        jSliderPorcentaje.setPaintLabels(true);
        jSliderPorcentaje.setPaintTicks(true);
        jSliderPorcentaje.setSnapToTicks(true);
        jSliderPorcentaje.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderPorcentajeStateChanged(evt);
            }
        });

        jLabel5.setText("SELECCIONA CARACTER√çSTICAS:");

        buttonGroupClase.add(jRadioButtonResidente);
        jRadioButtonResidente.setText("Residente");

        buttonGroupClase.add(jRadioButtonNoResidente);
        jRadioButtonNoResidente.setText("No residente");

        jCheckBoxTipo.setText("Por tipo");

        jCheckBoxClase.setText("Por Clase");

        jCheckBoxTiempo.setText("Por tiempo");

        jComboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monovolumen", "Berlina", "Familiar", "Todoterreno" }));

        jTextPorcentaje.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(29, 29, 29)
                .addComponent(jButton2)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBoxTipo)
                                .addComponent(jCheckBoxClase)
                                .addComponent(jCheckBoxTiempo))
                            .addGap(40, 40, 40)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jRadioButtonResidente)
                                    .addGap(18, 18, 18)
                                    .addComponent(jRadioButtonNoResidente))
                                .addComponent(jComboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(jSpinnertiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jSliderPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jTextPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel5)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxTipo)
                    .addComponent(jComboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBoxClase)
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxTiempo)
                            .addComponent(jLabel3)
                            .addComponent(jSpinnertiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButtonResidente)
                        .addComponent(jRadioButtonNoResidente)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSliderPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(jTextPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jSliderPorcentajeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderPorcentajeStateChanged
        // TODO add your handling code here:
         jTextPorcentaje.setText(String.valueOf(jSliderPorcentaje.getValue()));
    }//GEN-LAST:event_jSliderPorcentajeStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBoxTipo.isSelected()) {
            cambiaValoresCuyoTipo();
        }  if (jCheckBoxClase.isSelected()) {
                cambiaValoresCuyaClase();
        } if (jCheckBoxTiempo.isSelected()) {
                cambiaValoresCuyoTiempo();
        } if (!jCheckBoxTipo.isSelected() && !jCheckBoxClase.isSelected() && !jCheckBoxTiempo.isSelected())
            JOptionPane.showMessageDialog(this,"Selecciona una de las tres opciones","AVISO",JOptionPane.INFORMATION_MESSAGE);
        
     
        
    }//GEN-LAST:event_jButton1ActionPerformed
   
    

    //Rellena un combo con los tipos de la base
    //Haz un radio button con colores
    //un jspinner para el tiempoAcumulado
    //Un jslider para el porcentaje de la subida
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupClase;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBoxClase;
    private javax.swing.JCheckBox jCheckBoxTiempo;
    private javax.swing.JCheckBox jCheckBoxTipo;
    private javax.swing.JComboBox<String> jComboTipo;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRadioButtonNoResidente;
    private javax.swing.JRadioButton jRadioButtonResidente;
    private javax.swing.JSlider jSliderPorcentaje;
    private javax.swing.JSpinner jSpinnertiempo;
    private javax.swing.JTextField jTextPorcentaje;
    // End of variables declaration//GEN-END:variables

private void llenaComboTipo() {
        try {
            ConectaBBDD con = new ConectaBBDD();
            con.conecta();
            con.crearSentencia();
            String sql = "SELECT * FROM tipos ";
            con.ejecutaSQL(sql);
            DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
    
            while (con.rs.next())
            
            modeloCombo.addElement(con.rs.getString("descripcion"));  
             
            
             jComboTipo.setModel(modeloCombo);//con esto lo agregamos al objeto al jcombobox
             con.cerrarConexion();
        } catch (SQLException ex) {
            Logger.getLogger(EntradaSalida.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void cambiaValoresCuyoTipo() {
        int indiceRecogido = jComboTipo.getSelectedIndex()+1;
        String tipoSeleccionado = "0"+indiceRecogido;
        int porcentajeIncrementado = jSliderPorcentaje.getValue();
        try {
            
          ConectaBBDD con = new ConectaBBDD();
            con.conecta();
            con.crearSentencia();            
            String sql = "UPDATE vehiculos SET tiempoAcumulado = '"+porcentajeIncrementado+"' WHERE tipo ='"+tipoSeleccionado+"'";                   
            int error = con.updateSQL(sql);
            con.cerrarConexion();
            if (error==2) {
                JOptionPane.showMessageDialog(this,"Has seleccionado el tipo "+jComboTipo.getSelectedItem()+" para cambiarle el valor su tiempoAcumulado por "+porcentajeIncrementado,"AVISO",JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            }
            if (error==1)
                JOptionPane.showMessageDialog(this,"Cambios no realizados","AVISO",JOptionPane.INFORMATION_MESSAGE);
            if (error==0)
                JOptionPane.showMessageDialog(this,"No se han encontrado veh√≠culos de tipo"+jComboTipo.getSelectedItem()+" en la base de datos","AVISO",JOptionPane.INFORMATION_MESSAGE);
            System.out.println(porcentajeIncrementado);
            System.out.println(error);
            System.out.println(tipoSeleccionado);
                   
                    } catch (SQLException ex) {
            Logger.getLogger(Ejercicio2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void cambiaValoresCuyaClase() {
    //Recoge valor de la clase de la BBDD
    String claseSeleccionada = null;
    if (jRadioButtonResidente.isSelected())
        claseSeleccionada = "01";
    else 
        claseSeleccionada = "02";
    
       
        int porcentajeIncrementado = jSliderPorcentaje.getValue();
        try {
            
          ConectaBBDD con = new ConectaBBDD();
            con.conecta();
            con.crearSentencia();            
            String sql = "UPDATE vehiculos SET tiempoAcumulado = '"+porcentajeIncrementado+"' WHERE clase ='"+claseSeleccionada+"'";                   
            int error = con.updateSQL(sql);
            con.cerrarConexion();
             
                JOptionPane.showMessageDialog(this,"Has seleccionado la clase "+claseSeleccionada+". La tabla tiempoAcumulado se actualizar√° con el valor "+porcentajeIncrementado,"AVISO",JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            
            if (error==1)
                JOptionPane.showMessageDialog(this,"Cambios no realizados","AVISO",JOptionPane.INFORMATION_MESSAGE);
            if (error==0)
                JOptionPane.showMessageDialog(this,"No se han encontrado veh√≠culos de esta clase"+jComboTipo.getSelectedItem()+" en la base de datos","AVISO",JOptionPane.INFORMATION_MESSAGE);
            System.out.println(porcentajeIncrementado);
            System.out.println(error);
            System.out.println(claseSeleccionada);
                   
                    } catch (SQLException ex) {
            Logger.getLogger(Ejercicio2.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    private void cambiaValoresCuyoTiempo() {
    //Recoge valor del tiempo de la BBDD
        int tiempoAcumulado = (int) jSpinnertiempo.getValue();
       
        int tiempoActualizado = jSliderPorcentaje.getValue();
        try {
            
          ConectaBBDD con = new ConectaBBDD();
            con.conecta();
            con.crearSentencia();            
        
            String sql = "UPDATE vehiculos SET tiempoAcumulado = '"+tiempoActualizado+"' WHERE tiempoAcumulado ='"+tiempoAcumulado+"'";                   
            int error = con.updateSQL(sql);
            con.cerrarConexion();
             if (error==3) {
                JOptionPane.showMessageDialog(this,"Has actualizado el tiempo con el valor "+tiempoActualizado,"AVISO",JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
             }
            if (error==1)
                JOptionPane.showMessageDialog(this,"Cambios no realizados","AVISO",JOptionPane.INFORMATION_MESSAGE);
            if (error==0)
                JOptionPane.showMessageDialog(this,"No hay veh√≠culos en la bbdd con el tiempo seleccionado","AVISO",JOptionPane.INFORMATION_MESSAGE);
            
            System.out.println(error);
            System.out.println(tiempoAcumulado);
                   
                    } catch (SQLException ex) {
            Logger.getLogger(Ejercicio2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
